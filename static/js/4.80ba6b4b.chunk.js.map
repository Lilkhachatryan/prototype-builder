{"version":3,"sources":["components/settings/ShapeSettings/ShapeSettings.js"],"names":["ShapeSettings","state","inputs","fill","props","currentElement","strokeWidth","stroke","opacity","ry","shadow","componentDidUpdate","prevProps","newAtts","color","blur","offsetX","offsetY","setState","handleChange","event","type","value","target","newInputs","cloneDeep","elementChange","rx","handleShadowChange","newShadow","className","onChange","_","this","step","name","min","max","id","React","Component"],"mappings":"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","file":"static/js/4.80ba6b4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport './ShapeSettings.scss';\r\n\r\nclass ShapeSettings extends React.Component {\r\n\r\n    state = {\r\n        inputs: {\r\n            fill: this.props.currentElement.fill,\r\n            strokeWidth: this.props.currentElement.strokeWidth,\r\n            stroke: this.props.currentElement.stroke,\r\n            opacity: this.props.currentElement.opacity,\r\n            ry: this.props.currentElement.ry,\r\n            shadow: { ...this.props.currentElement.shadow }\r\n        }\r\n    };\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (prevProps.currentElement !== this.props.currentElement) {\r\n            const newAtts = {\r\n                fill: this.props.currentElement.fill,\r\n                strokeWidth: this.props.currentElement.strokeWidth,\r\n                stroke: this.props.currentElement.stroke,\r\n                opacity: this.props.currentElement.opacity,\r\n                ry: this.props.currentElement.ry,\r\n                shadow: this.props.currentElement.shadow || {color: '#000000', blur: 0, offsetX: 0, offsetY: 0}\r\n            };\r\n            this.setState({ inputs: newAtts });\r\n        }\r\n    };\r\n\r\n    handleChange = (event, type) => {\r\n        let value = event.target.value;\r\n        let newInputs = cloneDeep(this.state.inputs);\r\n        newInputs[type] = value;\r\n        this.setState({ inputs: newInputs });\r\n\r\n        if (type === 'opacity' || type === 'strokeWidth') {\r\n            value = +value;\r\n        }\r\n        if (type === 'ry') {\r\n            this.props.elementChange({ rx: value, ry: value });\r\n        } else {\r\n            this.props.elementChange({ [type]: value });\r\n        }\r\n    };\r\n\r\n    handleShadowChange = (event, type) => {\r\n        let newInputs = cloneDeep(this.state.inputs);\r\n        let newShadow = { ...this.state.inputs.shadow };\r\n        newShadow[type] = event.target.value;\r\n        newInputs.shadow = newShadow;\r\n        this.setState({ inputs: newInputs });\r\n        this.props.elementChange({ shadow: newShadow });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Fill</label>\r\n                    <input\r\n                        type=\"color\"\r\n                        onChange={(_) => this.handleChange(_, 'fill')}\r\n                        value={this.state.inputs.fill} />\r\n                </div>\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Stroke Width (px)</label>\r\n                    <input className='field-styling' type=\"number\" step=\"1\" value={this.state.inputs.strokeWidth}\r\n                        onChange={(_) => this.handleChange(_, 'strokeWidth')} />\r\n                </div>\r\n                {this.props.currentElement.type !== 'rect' ? null : <div className='mb-3 flexInput'>\r\n                    <label>Border radius (px)</label>\r\n                    <input className='field-styling' type=\"number\" value={this.state.inputs.ry}\r\n                        onChange={(_) => this.handleChange(_, 'ry')} />\r\n                </div>}\r\n\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Stroke Color</label>\r\n                    <input\r\n                        type=\"color\"\r\n                        onChange={(_) => this.handleChange(_, 'stroke')}\r\n                        value={this.state.inputs.stroke}\r\n                    />\r\n                </div>\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Opacity:</label>\r\n                    <input\r\n                        type=\"range\"\r\n                        name=\"opacity\"\r\n                        min=\"0\"\r\n                        max=\"1\"\r\n                        step=\"0.05\"\r\n                        value={this.state.inputs.opacity}\r\n                        onChange={(_) => this.handleChange(_, 'opacity')}\r\n                    />\r\n                </div>\r\n                <div className=\"shadowSettings\">\r\n                    <h6>Box shadow</h6>\r\n                    <div>\r\n                        <label>Color</label>\r\n                        <input type=\"color\" onChange={(_) => this.handleShadowChange(_, 'color')} value={this.state.inputs.shadow.color} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Blur</label>\r\n                        <input type=\"number\" className=\"field-styling\" onChange={(_) => this.handleShadowChange(_, 'blur')} value={this.state.inputs.shadow.blur} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Horizontal</label>\r\n                        <input type=\"number\" className=\"field-styling\" onChange={(_) => this.handleShadowChange(_, 'offsetX')} value={this.state.inputs.shadow.offsetX} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Vertical</label>\r\n                        <input type=\"number\" className=\"field-styling\" onChange={(_) => this.handleShadowChange(_, 'offsetY')} value={this.state.inputs.shadow.offsetY} />\r\n                    </div>\r\n                    <div id=\"color-picker-1\" className=\"mx-auto\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShapeSettings;\r\n"],"sourceRoot":""}