{"version":3,"sources":["components/settings/ImageSettings.js"],"names":["ImageSettings","state","inputs","fill","props","currentElement","strokeWidth","stroke","opacity","src","file","componentDidUpdate","prevProps","newAtts","setState","handleChange","event","type","value","target","newInputs","elementChange","rx","ry","handleSrcInputChange","handleSrcChange","handleFileChange","files","url","URL","createObjectURL","className","onChange","_","this","step","name","min","max","placeholder","onClick","React","Component"],"mappings":"yMAEMA,E,4MAEFC,MAAQ,CACJC,OAAQ,CACJC,KAAM,EAAKC,MAAMC,eAAeF,KAChCG,YAAa,EAAKF,MAAMC,eAAeC,YACvCC,OAAQ,EAAKH,MAAMC,eAAeE,OAClCC,QAAS,EAAKJ,MAAMC,eAAeG,QACnCC,IAAK,GACLC,KAAM,K,EAIdC,mBAAqB,SAACC,GAClB,GAAIA,EAAUP,iBAAmB,EAAKD,MAAMC,eAAgB,CACxD,IAAMQ,EAAU,CACZV,KAAM,EAAKC,MAAMC,eAAeF,KAChCG,YAAa,EAAKF,MAAMC,eAAeC,YACvCC,OAAQ,EAAKH,MAAMC,eAAeE,OAClCC,QAAS,EAAKJ,MAAMC,eAAeG,SAEvC,EAAKM,SAAS,CAACZ,OAAQW,M,EAI/BE,aAAe,SAACC,EAAOC,GACnB,IAAIC,EAAQF,EAAMG,OAAOD,MACrBE,EAAS,eAAO,EAAKnB,MAAMC,QAC/BkB,EAAUH,GAAQC,EAClB,EAAKJ,SAAS,CAACZ,OAAQkB,IAEV,YAATH,GAA+B,gBAATA,IACtBC,GAASA,GAEA,OAATD,EACA,EAAKb,MAAMiB,cAAc,CAACC,GAAIJ,EAAOK,GAAIL,IAEzC,EAAKd,MAAMiB,cAAX,eAA2BJ,EAAOC,K,EAI1CM,qBAAuB,SAACR,GACpB,IAAII,EAAS,eAAO,EAAKnB,MAAMC,QAC/BkB,EAAUX,IAAMO,EAAMG,OAAOD,MAC7B,EAAKJ,SAAS,CAACZ,OAAQkB,K,EAG3BK,gBAAkB,WACd,GAAI,EAAKxB,MAAMC,OAAOO,IAAK,CACvB,EAAKL,MAAMiB,cAAc,CAACZ,IAAK,EAAKR,MAAMC,OAAOO,MACjD,IAAIW,EAAS,eAAO,EAAKnB,MAAMC,QAC/BkB,EAAUX,IAAM,GAChB,EAAKK,SAAS,CAACZ,OAAQkB,M,EAI/BM,iBAAmB,SAACV,GAChB,IAAMN,EAAOM,EAAMG,OAAOQ,MAAM,GAC1BC,EAAMC,IAAIC,gBAAgBpB,GAC5BU,EAAS,eAAO,EAAKnB,MAAMC,QAC/BkB,EAAUX,IAAMmB,EAChB,EAAKd,SAAS,CAACZ,OAAQkB,K,uDAGjB,IAAD,OACL,OACI,6BACI,yBAAKW,UAAU,kBACX,uCACA,2BACId,KAAK,QACLe,SAAU,SAACC,GAAD,OAAO,EAAKlB,aAAakB,EAAG,oBACtCf,MAAOgB,KAAKjC,MAAMC,OAAOC,QAEjC,yBAAK4B,UAAU,kBACX,oDACA,2BAAOA,UAAU,gBAAgBd,KAAK,SAASkB,KAAK,IAAIjB,MAAOgB,KAAKjC,MAAMC,OAAOI,YAC1E0B,SAAU,SAACC,GAAD,OAAO,EAAKlB,aAAakB,EAAG,mBAGjD,yBAAKF,UAAU,kBACX,+CACA,2BACId,KAAK,QACLe,SAAU,SAACC,GAAD,OAAO,EAAKlB,aAAakB,EAAG,WACtCf,MAAOgB,KAAKjC,MAAMC,OAAOK,UAGjC,yBAAKwB,UAAU,kBACX,2CACA,2BACId,KAAK,QACLmB,KAAK,UACLC,IAAI,IACJC,IAAI,IACJH,KAAK,OACLjB,MAAOgB,KAAKjC,MAAMC,OAAOM,QACzBwB,SAAU,SAACC,GAAD,OAAO,EAAKlB,aAAakB,EAAG,eAG9C,yBAAKF,UAAU,QACX,2BAAOA,UAAU,WAAjB,gBACA,6BACI,2BAAOd,KAAK,OAAOc,UAAU,qBAAqBC,SAAUE,KAAKV,qBAC1DN,MAAOgB,KAAKjC,MAAMC,OAAOO,IACzB8B,YAAY,cACnB,2BAAOtB,KAAK,OAAOc,UAAU,eAAeC,SAAUE,KAAKR,mBAC3D,4BAAQc,QAASN,KAAKT,gBAAiBM,UAAU,oCAAjD,wB,GA3GIU,IAAMC,WAmHnB1C","file":"static/js/6.af72b2d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ImageSettings extends React.Component {\r\n\r\n    state = {\r\n        inputs: {\r\n            fill: this.props.currentElement.fill,\r\n            strokeWidth: this.props.currentElement.strokeWidth,\r\n            stroke: this.props.currentElement.stroke,\r\n            opacity: this.props.currentElement.opacity,\r\n            src: '',\r\n            file: ''\r\n        }\r\n    };\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (prevProps.currentElement !== this.props.currentElement) {\r\n            const newAtts = {\r\n                fill: this.props.currentElement.fill,\r\n                strokeWidth: this.props.currentElement.strokeWidth,\r\n                stroke: this.props.currentElement.stroke,\r\n                opacity: this.props.currentElement.opacity,\r\n            };\r\n            this.setState({inputs: newAtts});\r\n        }\r\n    };\r\n\r\n    handleChange = (event, type) => {\r\n        let value = event.target.value;\r\n        let newInputs = {...this.state.inputs};\r\n        newInputs[type] = value;\r\n        this.setState({inputs: newInputs});\r\n\r\n        if (type === 'opacity' || type === 'strokeWidth') {\r\n            value = +value;\r\n        }\r\n        if (type === 'ry') {\r\n            this.props.elementChange({rx: value, ry: value})\r\n        } else {\r\n            this.props.elementChange({[type]: value})\r\n        }\r\n    };\r\n\r\n    handleSrcInputChange = (event) => {\r\n        let newInputs = {...this.state.inputs};\r\n        newInputs.src = event.target.value;\r\n        this.setState({inputs: newInputs})\r\n    }\r\n\r\n    handleSrcChange = () => {\r\n        if (this.state.inputs.src) {\r\n            this.props.elementChange({src: this.state.inputs.src})\r\n            let newInputs = {...this.state.inputs};\r\n            newInputs.src = '';\r\n            this.setState({inputs: newInputs})\r\n        }\r\n    }\r\n\r\n    handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        const url = URL.createObjectURL(file);\r\n        let newInputs = {...this.state.inputs};\r\n        newInputs.src = url;\r\n        this.setState({inputs: newInputs})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Fill</label>\r\n                    <input\r\n                        type='color'\r\n                        onChange={(_) => this.handleChange(_, 'backgroundColor')}\r\n                        value={this.state.inputs.fill}/>\r\n                </div>\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Stroke Width (px)</label>\r\n                    <input className='field-styling' type='number' step='1' value={this.state.inputs.strokeWidth}\r\n                           onChange={(_) => this.handleChange(_, 'strokeWidth')}/>\r\n                </div>\r\n\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Stroke Color</label>\r\n                    <input\r\n                        type='color'\r\n                        onChange={(_) => this.handleChange(_, 'stroke')}\r\n                        value={this.state.inputs.stroke}\r\n                    />\r\n                </div>\r\n                <div className='mb-3 flexInput'>\r\n                    <label>Opacity:</label>\r\n                    <input\r\n                        type='range'\r\n                        name='opacity'\r\n                        min='0'\r\n                        max='1'\r\n                        step='0.05'\r\n                        value={this.state.inputs.opacity}\r\n                        onChange={(_) => this.handleChange(_, 'opacity')}\r\n                    />\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label className='d-block'>Image source</label>\r\n                    <div>\r\n                        <input type='text' className='field-styling mb-3' onChange={this.handleSrcInputChange}\r\n                               value={this.state.inputs.src}\r\n                               placeholder='Image url'/>\r\n                        <input type='file' className='d-block mb-3' onChange={this.handleFileChange}/>\r\n                        <button onClick={this.handleSrcChange} className='btn btn-primary upload-image-btn'>Update source</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageSettings;\r\n"],"sourceRoot":""}