{"version":3,"sources":["components/settings/ShareIconsSettings.js"],"names":["ShapeSettings","state","inputs","colors","props","currentElement","fill","fillName","componentDidMount","newAtts","setState","componentDidUpdate","prevProps","handleChange","event","type","newInputs","target","value","groupElementChange","className","onChange","_","this","React","Component"],"mappings":"yMAEMA,E,4MAEFC,MAAQ,CACJC,OAAQ,CACJC,OAAQ,EAAKC,MAAMC,eAAeF,QAAU,WAC5CG,KAAM,EAAKF,MAAMC,eAAeE,UAAY,K,EAIpDC,kBAAoB,WAChB,IAAMC,EAAO,2BACN,EAAKR,MAAMC,QADL,IAETC,OAAQ,EAAKC,MAAMC,eAAeF,QAAU,WAC5CG,KAAM,EAAKF,MAAMC,eAAeE,UAAY,KAEhD,EAAKG,SAAS,CAACR,OAAQO,K,EAG3BE,mBAAqB,SAACC,GAClB,GAAIA,EAAUP,iBAAmB,EAAKD,MAAMC,eAAgB,CACxD,IAAMI,EAAO,2BACN,EAAKR,MAAMC,QADL,IAETC,OAAQ,EAAKC,MAAMC,eAAeF,OAClCG,KAAM,EAAKF,MAAMC,eAAeE,WAEpC,EAAKG,SAAS,CAACR,OAAQO,M,EAI/BI,aAAe,SAACC,EAAOC,GACnB,IAAMC,EAAS,2BAAO,EAAKf,MAAMC,QAAlB,kBAA2Ba,EAAOD,EAAMG,OAAOC,QAC9D,EAAKd,MAAMe,mBAAX,eAAgCJ,EAAOD,EAAMG,OAAOC,QACpD,EAAKR,SAAS,CAACR,OAAQc,K,uDAGjB,IAAD,OACL,OACI,6BACI,yBAAKI,UAAU,kBACX,2BAAOA,UAAU,QAAjB,eACA,4BAAQA,UAAU,gBAAgBC,SAAU,SAACC,GAAD,OAAO,EAAKT,aAAaS,EAAG,WAChEJ,MAAOK,KAAKtB,MAAMC,OAAOC,QAC7B,4BAAQe,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,YAIyB,WAA7BK,KAAKtB,MAAMC,OAAOC,OACd,KACE,yBAAKiB,UAAU,kBACb,uCACA,2BACIL,KAAK,QACLM,SAAU,SAACC,GAAD,OAAO,EAAKT,aAAaS,EAAG,SACtCJ,MAAOK,KAAKtB,MAAMC,OAAOI,a,GAtD7BkB,IAAMC,WA8DnBzB","file":"static/js/8.0af744f0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ShapeSettings extends React.Component {\r\n\r\n    state = {\r\n        inputs: {\r\n            colors: this.props.currentElement.colors || 'official',\r\n            fill: this.props.currentElement.fillName || '',\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const newAtts = {\r\n            ...this.state.inputs,\r\n            colors: this.props.currentElement.colors || 'official',\r\n            fill: this.props.currentElement.fillName || '',\r\n        };\r\n        this.setState({inputs: newAtts});\r\n    };\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (prevProps.currentElement !== this.props.currentElement) {\r\n            const newAtts = {\r\n                ...this.state.inputs,\r\n                colors: this.props.currentElement.colors,\r\n                fill: this.props.currentElement.fillName,\r\n            };\r\n            this.setState({inputs: newAtts});\r\n        }\r\n    };\r\n\r\n    handleChange = (event, type) => {\r\n        const newInputs = {...this.state.inputs, [type]: event.target.value};\r\n        this.props.groupElementChange({[type]: event.target.value});\r\n        this.setState({inputs: newInputs});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='mb-3 flexInput'>\r\n                    <label className='mb-0'>Icons color</label>\r\n                    <select className='field-styling' onChange={(_) => this.handleChange(_, 'colors')}\r\n                            value={this.state.inputs.colors}>\r\n                        <option value='official'>Official</option>\r\n                        <option value='custom'>Custom</option>\r\n                    </select>\r\n                </div>\r\n                {\r\n                    this.state.inputs.colors !== 'custom' ?\r\n                        null\r\n                        : <div className='mb-3 flexInput'>\r\n                            <label>Fill</label>\r\n                            <input\r\n                                type='color'\r\n                                onChange={(_) => this.handleChange(_, 'fill')}\r\n                                value={this.state.inputs.fill}/>\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShapeSettings;\r\n"],"sourceRoot":""}